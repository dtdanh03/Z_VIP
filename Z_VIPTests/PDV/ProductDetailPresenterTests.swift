//
//  ProductDetailPresenterTests.swift
//  Z_VIP
//
//  Created by Danh Dang on 11/30/17.
//  Copyright (c) 2017 com.zalora. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Z_VIP
import XCTest

class ProductDetailPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: ProductDetailPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupProductDetailPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProductDetailPresenter() {
        sut = ProductDetailPresenter()
    }
    
    // MARK: Test doubles
    
    class ProductDetailDisplayLogicSpy: ProductDetailDisplayLogic {
        
        var displayProductDetailCalled = false
        var viewModel: ProductDetail.ViewModel!
        
        func display(productDetail product: ProductDetail.ViewModel) {
            displayProductDetailCalled = true
            viewModel = product
        }
    }
    
    // MARK: Tests
    
    func testPresentProductDetail() {
        // Given
        let spy = ProductDetailDisplayLogicSpy()
        sut.viewController = spy
        let imageList = ["a", "b", "c", "d"]
        let response = ProductDetail.Response(product: MockModels.product1, imageList: imageList)
        let displayProduct = Product.productDetailDisplayProduct(from: MockModels.product1)
        
        // When
        sut.present(response: response)
        
        // Then
        XCTAssertTrue(spy.displayProductDetailCalled, "present(response:) should ask the view controller to display the result")
        XCTAssertEqual(spy.viewModel.product.name, displayProduct.name, "Product name to be displayed should match original product name")
        XCTAssertEqual(spy.viewModel.product.brand, displayProduct.brand, "Product brand to be displayed should match original product brand")
        XCTAssertEqual(spy.viewModel.product.price, displayProduct.price, "Product price to be displayed should be in correct format")
        XCTAssertEqual(spy.viewModel.imageList, imageList, "Image list to be displayed should match the image list from response")
    }
}
